@import 'constants';

.container {
    // Ensures container stretches to max-width when it can
    width: 100%;
    max-width: 1600px;
    flex-grow: 1;
    padding-left: 23px;
    padding-right: 23px;
}

body {
    // Note: The popular mobile browsers fix vh to the entire viewport height (including url bar height) - https: //developers.google.com/web/updates/2016/12/url-bar-resizing.
    // They fix 100% for html height to viewport height - url bar height. This means that there is no reliable way to avoid overflow immediately after page load.
    // Consider a page with auto height < (viewport height - url bar), that has its html height set to 100% and body min-height set to 100%: if a drop down is expanded, 
    // and the page is scrolled down such that the url bar transitions out, and finally the drop down is collapsed, there will be empty whitespace at the bottom of 
    // the page.
    min-height: 100vh;
}

html, body {
    font-family: $font-family;
    font-size: $font-size-3;
    line-height: 1.6;
    opacity: $opacity-6;
}

body, body * {
    display: flex;
    // By default, if an element is tapped in chrome for android, it flashes blue.
    // This is unecessary since animations are used by mimo to signify successful interation.
    -webkit-tap-highlight-color: transparent;
}

html {
    // see footerComponent
    height: 100vh;
    min-width: 320px;
}

body {
    flex-direction: column;

    > .container {
        align-self: center;
        padding-bottom: 59px;

        @media #{$media-narrow} {
            flex-direction: column;
        }
        // When screen is narrow, left menu needs to be just beneath breadcrumbs
        @media #{$media-medium}, #{$media-wide} {
            padding-top: 59px;

            &.breadcrumbs-disabled {
                // When breadcrumbs are disabled, header height remains the same, so padding top must be less
                padding-top: 38px;
            }

            // See leftMenuComponent UpdateLeftMenu - If left and right menu are the same height as the article,
            // the min-height fix does not work properly when resizing.
            align-items: flex-start;
        }
    }
}

button, a {
    cursor: pointer;
}

button {
    border: none;
    background-color: transparent;
    padding: 0;
}

*:focus {
    outline: none;
}

*::-moz-focus-inner {
    border: 0;
}

script {
    display: none;
}

a {
    color: $color-primary-text-link;
    text-decoration: none;
}

* {
    -webkit-margin-before: 0em;
    -webkit-margin-after: 0em;
}

*, *::before, *::after {
    box-sizing: border-box;
}

h1 {
    font-size: $font-size-7;
}

h2 {
    font-size: $font-size-6;
}

h3 {
    font-size: $font-size-5;
}

h4 {
    font-size: $font-size-4;
}

*::placeholder {
    opacity: $opacity-3;
    color: $color-primary-text;
}

*:placeholder {
    opacity: $opacity-3;
    color: $color-primary-text;
}

*::-ms-clear{
    display: none;
}