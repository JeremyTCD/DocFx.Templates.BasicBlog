@import 'constants';

body {
    display: flex;
    flex-direction: column;
    position: relative;
    min-height: 100%;

    #overlay {
        // TODO is this affecting page height?
        height: 100vh;
        width: 100%;
        position: fixed;
        background-color: black;
        opacity: 0;
        z-index: 2;
        visibility: hidden;
        transition: opacity $medium-animation-duration $ease-out-quad;
        will-change: opacity;
    }

    * {
        // FF uses auto as the default min-height for some elements (such as lis). auto means min-content (minimum space to fit content). Not setting min-height to 0 can thus result in overflow despite
        // flex-grow being set to 0.
        min-height: 0;
    }

    &.preload {
        * {
            transition: none !important;
        }
    }
}

html, body {
    // Smooth-scroll plugin is smoother than this CSS property
    //scroll-behavior: smooth;
    font-size: $font-size-3;
    line-height: 1.6;
    opacity: $opacity-6;
}

body, body * {
    // By default, if an element is tapped in chrome for android, it flashes blue.
    // This is unecessary since animations are used by mimo to signify successful interation.
    -webkit-tap-highlight-color: transparent;
    // If left as default, some browsers, such as android chrome, attempt to enlarge certain portions of text that it deems important. Unfortunately, it does not seem to work consistently with documentation sites,
    // especially in tables - https://stackoverflow.com/questions/15977840/why-does-the-font-in-these-td-elements-render-at-different-sizes, https://developer.mozilla.org/en-US/docs/Web/CSS/text-size-adjust
    text-size-adjust: none;
    // Elements with display flex have min-width set to auto by default (a min-width value unique to flexbox). This causes a host of problems with overflowing content-
    // https://weblog.west-wind.com/posts/2016/Feb/15/Flexbox-Containers-PRE-tags-and-managing-Overflow.
    min-width: 0;
    // Avoid text overflowing content boxes at all cost
    overflow-wrap: break-word;
}

html {
    height: 100%;
    min-width: 320px;
}

button, a {
    cursor: pointer;
}

button {
    border: none;
    background-color: transparent;
    padding: 0;
}

*:focus {
    outline: none;
}

*::-moz-focus-inner {
    border: 0;
}

*::selection {
    color: $color-secondary-text;
    background-color: rgba($color-primary-link, 0.99);
    text-shadow: none;
}

script {
    display: none;
}

a {
    color: $color-primary-link;
    text-decoration: none;
}

* {
    -webkit-margin-before: 0em;
    -webkit-margin-after: 0em;
}

*, *::before, *::after {
    box-sizing: border-box;
}

*::placeholder {
    opacity: $opacity-3;
    color: $color-primary-text;
}

*:placeholder {
    opacity: $opacity-3;
    color: $color-primary-text;
}

*::-ms-clear {
    display: none;
}
