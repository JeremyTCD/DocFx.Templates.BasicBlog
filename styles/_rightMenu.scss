@import 'constants';

$bar-margin-right: 9px;
$bar-width: 3px;

#right-menu {
    font-size: $font-size-2;
    // Default flex-shrink is 1. When toc contents become fixed, they are taken out of the document flow.
    // Toc's adjacent article element expands fully width-wise. Flexbox thinks main's contents are overflowing width-wise
    // and distributes negative space between toc and article 1:1. To avoid this, flex-shrink must be set to 0.
    flex-shrink: 0;

    @media #{$media-narrow}, #{$media-medium} {
        padding-bottom: 24px;
    }

    @media #{$media-wide} {
        overflow-y: hidden;
        margin-top: -6px;
        width: $side-menu-width;
        height: auto !important;
        margin-left: 64px;
    }

    > .wrapper {
        width: inherit;
        align-items: flex-start; // Scroll for outline should be adjacent to headers links
        flex-direction: column;

        @media #{$media-wide} {
            &.fixed {
                position: fixed;
                top: 15px;
            }
        }

        .wrapper {
            @media #{$media-wide} {
                flex-direction: column;
                align-items: stretch;
                align-self: stretch;
            }

            @media #{$media-narrow}, #{$media-medium} {
                &::before {
                    content: "";
                    width: $bar-width;
                    background-color: $color-secondary;
                    margin-right: $bar-margin-right;
                }
            }

            #outline {
                flex-direction: column;

                > span {
                    @media #{$media-narrow}, #{$media-medium} {
                        display: none;
                    }

                    @media #{$media-wide} {
                        font-size: $font-size-3;
                        padding-bottom: 9px;
                    }
                }

                > ul > li:first-child > a {
                    margin-top: 0;
                }

                ul {
                    flex-direction: column;

                    &.level1 {
                        @media #{$media-wide} {
                            overflow-y: auto;
                        }
                    }

                    &.level2, &.level3 {
                        padding-left: 14px;
                    }

                    li {
                        flex-direction: column;
                        align-items: flex-start;

                        @media #{$media-wide} {
                            flex-shrink: 0;
                        }

                        a {
                            user-select: none;
                            cursor: pointer;
                            align-items: stretch;
                            margin-top: 5px;
                            margin-bottom: 4px;

                            @media #{$media-wide} {
                                &::before {
                                    content: "";
                                    margin-right: $bar-margin-right;
                                    width: $bar-width;
                                    background-color: $color-primary-text;
                                    opacity: $opacity-2;
                                    transform: scaleY(0);
                                    transition: transform 0.26s $ease-out-quad;
                                    // When scrollbar appears, if flex-shrink is not 0, bar width can get set to 0
                                    flex-shrink: 0;
                                }

                                &.active {
                                    &::before {
                                        transform: scaleY(1);
                                    }
                                }
                            }

                            & > span {
                                // animated-underline only works if the element who's background is animated has a parent that has display block,
                                // inline-block or inline. In this case it doesn't matter since a has display flex and all its children are just flex items.
                                display: inline;

                                & > span {
                                    margin-right: 14px;
                                    @include animated-underline($color-primary-text-link, $animated-underline-14px-ypos, $background-color: $color-primary);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

#edit-article {
    @media #{$media-wide} {
        margin-bottom: 23px;
    }

    align-items: center;

    svg {
        height: 18px;
        width: 18px;
        opacity: $opacity-2;
        fill: $color-primary-text;
        margin-right: 5px;
    }

    span {
        flex-shrink: 0;
        @include animated-underline($color-primary-text-link, $animated-underline-14px-ypos, $background-color: $color-primary);
    }
}
