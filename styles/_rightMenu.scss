@import 'constants';

#right-menu {
    font-size: $font-size-1;
    // Default flex-shrink is 1. When toc contents become fixed, they are taken out of the document flow.
    // Toc's adjacent article element expands fully width-wise. Flexbox thinks main's contents are overflowing width-wise
    // and distributes negative space between toc and article 1:1. To avoid this, flex-shrink must be set to 0.
    flex-shrink: 0;

    @media #{$media-narrow}, #{$media-medium} {
        padding-bottom: $gap-4;
    }

    @media #{$media-wide} {
        overflow-y: hidden;
        margin-top: -3px;
        width: $side-menu-width;
        height: auto !important;
        margin-left: $gap-1;
    }

    > .wrapper {
        flex-direction: column;

        @media #{$media-wide} {
            &.fixed {
                position: fixed;
                top: $gap-3;
                margin-top: -3px;
            }
        }

        #edit-article {
            @media #{$media-wide} {
                padding-bottom: $gap-3;
            }


            span {
                &:first-child {
                    align-items: center;
                    @include material-design-icon("\E3C9", $font-black-on-white-importance-2);
                }

                &:last-child {
                    flex-shrink: 0;

                    @media #{$media-narrow}, #{$media-medium} {
                        padding-left: $gap-6;
                    }

                    @media #{$media-wide} {
                        padding-left: $gap-5;
                    }

                    @include animated-underline($color-secondary-1, $color-secondary-1, $gap-9);
                }
            }
        }

        .wrapper {
            @media #{$media-narrow}, #{$media-medium} {
                flex-direction: row;

                &::before {
                    content: "";
                    width: $gap-7;
                    background-color: $color-primary-2;
                }
            }

            #outline {
                flex-direction: column;

                @media #{$media-narrow}, #{$media-medium} {
                    padding-left: $gap-4;
                }

                h5 {
                    padding-bottom: $gap-4;
                    color: $color-primary-2;
                }

                ul {
                    flex-direction: column;

                    &.level1 {
                        @media #{$media-wide} {
                            overflow-y: auto;
                        }
                    }

                    &.level2 {
                        padding-left: $gap-3;
                    }

                    li {
                        flex-direction: column;

                        @media #{$media-wide} {
                            flex-shrink: 0;
                        }

                        a {
                            user-select: none;
                            cursor: pointer;
                            align-items: stretch;

                            span {
                                margin-top: $gap-6;
                                margin-bottom: $gap-6;

                                &:last-child {
                                    padding-right: $gap-4;
                                }

                                @media #{$media-wide} {
                                    &:first-child {
                                        margin-right: $gap-5;
                                        width: $gap-7;
                                        background-color: $font-black-on-white-importance-2;
                                        transform: scaleY(0);
                                        transition: transform $transition-2;
                                        // When scrollbar appears, if flex-shrink is not 0, bar width can get set to 0
                                        flex-shrink: 0;
                                    }
                                }
                            }

                            @media #{$media-wide} {
                                &.active, &:hover {
                                    span {
                                        &:first-child {
                                            transform: scaleY(1);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
