@import 'constants';

#left-menu {
    font-size: $font-size-1;
    // Default flex-shrink is 1. When toc contents become fixed, they are taken out of the document flow.
    // Toc's adjacent article element expands fully width-wise. Flexbox thinks main's contents are overflowing width-wise
    // and distributes negative space between toc and article 1:1. To avoid this, flex-shrink must be set to 0.
    flex-shrink: 0;

    @media #{$media-narrow} {
        flex-direction: column;
        overflow-y: hidden;
        transition: height $transition-1;
        height: 0;
    }

    @media #{$media-medium}, #{$media-wide} {
        width: $side-menu-width;
        margin-right: $gap-1;
        height: auto !important;
    }

    .wrapper {
        width: inherit;
        flex-direction: column;

        @media #{$media-narrow} {
            flex-shrink: 0;
            flex-grow: 1;
            border-bottom-left-radius: $border-radius-main;
            border-bottom-right-radius: $border-radius-main;
            background-color: $color-grayscale-2;
            padding: $gap-3;
        }

        @media #{$media-medium}, #{$media-wide} {
            &.fixed {
                position: fixed;
                top: $gap-3;
            }
        }

        #left-menu-filter {
            margin-bottom: $gap-3;

            @include material-design-icon('\E152', black);
            align-items: center;
            border: 1px solid $font-black-on-white-importance-4;
            border-radius: $border-radius-main;
            transition: border-color $transition-2;
            padding: 0 $gap-4;
            height: $gap-2;

            @media #{$media-narrow} {
                background-color: $color-grayscale-1;
            }

            &.focus {
                border-color: $color-secondary-1;
            }

            &::before {
                background-color: transparent;
                border: none;
                padding-top: $gap-9;
                align-items: center;
                color: $font-black-on-white-importance-3;
            }

            input {
                background-color: transparent;
                border: none;
                padding-left: $gap-5;
                outline: none;
                flex-grow: 1;
            }
        }

        #left-menu-toc {
            @media #{$media-medium}, #{$media-wide} {
                overflow-y: auto;
            }

            ul {
                flex-grow: 1;
                flex-direction: column;

                li {
                    flex-direction: column;
                    flex-shrink: 0;

                    &.filter-hidden {
                        display: none;
                    }

                    &.expandable {
                        > a {
                            span {
                                &:first-child {
                                    &::before {
                                        visibility: visible;
                                        transform: rotate(0);
                                    }
                                }
                            }
                        }

                        &.expanded {
                            > a {
                                span {
                                    &:first-child {
                                        &::before {
                                            transform: rotate(90deg);
                                        }
                                    }
                                }
                            }
                        }

                        ul {
                            height: 0;
                            overflow: hidden;
                            transition: height $transition-2;
                        }
                    }

                    a {
                        user-select: none;
                        cursor: pointer;
                        align-items: center;
                        transition: background-color $transition-delayed-2, color $transition-delayed-2;

                        span {
                            &:first-child {
                                @include material-design-icon('\E5CC', inherit);
                                padding: $gap-5;
                                padding-right: $gap-6;
                                color: $font-black-on-white-importance-2;

                                &::before {
                                    visibility: hidden;
                                    transition: transform $transition-2, color $transition-2;
                                }
                            }

                            &:last-child {
                                padding: $gap-6 $gap-5;
                                padding-left: 0;
                            }
                        }

                        &:not([href]) {
                            color: $font-black-on-white-importance-2;
                        }

                        &.active {
                            background-color: $color-secondary-1;
                        }

                        &:hover.is-link:not(.active) {
                            background-color: $color-secondary-2;
                        }

                        &.active, &:hover.is-link {
                            color: $color-grayscale-1;

                            span {
                                &:first-child {
                                    color: $color-grayscale-1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
